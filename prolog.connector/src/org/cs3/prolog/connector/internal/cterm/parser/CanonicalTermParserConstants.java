/* Generated By:JJTree&JavaCC: Do not edit this line. CanonicalTermParserConstants.java */
package org.cs3.prolog.connector.internal.cterm.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CanonicalTermParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LPAREN = 7;
  /** RegularExpression Id. */
  int RPAREN = 8;
  /** RegularExpression Id. */
  int COMMA = 9;
  /** RegularExpression Id. */
  int DOT = 10;
  /** RegularExpression Id. */
  int LSQB = 11;
  /** RegularExpression Id. */
  int RSQB = 12;
  /** RegularExpression Id. */
  int LBRC = 13;
  /** RegularExpression Id. */
  int RBRC = 14;
  /** RegularExpression Id. */
  int CUT = 15;
  /** RegularExpression Id. */
  int CLAUSE_DEF = 16;
  /** RegularExpression Id. */
  int ATOM_IDENTIFIER = 17;
  /** RegularExpression Id. */
  int VARIABLE_IDENTIFIER = 18;
  /** RegularExpression Id. */
  int LETTER = 19;
  /** RegularExpression Id. */
  int LC_LETTER = 20;
  /** RegularExpression Id. */
  int UNICODE_LETTER = 21;
  /** RegularExpression Id. */
  int GRAPHIC = 22;
  /** RegularExpression Id. */
  int UC_LETTER = 23;
  /** RegularExpression Id. */
  int DIGIT = 24;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 25;
  /** RegularExpression Id. */
  int BIN_LITERAL = 26;
  /** RegularExpression Id. */
  int OCT_LITERAL = 27;
  /** RegularExpression Id. */
  int HEX_LITERAL = 28;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 29;
  /** RegularExpression Id. */
  int EXPONENT = 30;
  /** RegularExpression Id. */
  int QUOTED_ATOM = 31;
  /** RegularExpression Id. */
  int QUOTED_STRING = 32;
  /** RegularExpression Id. */
  int CLAUSE_REFERENCE = 33;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\".\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"!\"",
    "<CLAUSE_DEF>",
    "<ATOM_IDENTIFIER>",
    "<VARIABLE_IDENTIFIER>",
    "<LETTER>",
    "<LC_LETTER>",
    "<UNICODE_LETTER>",
    "<GRAPHIC>",
    "<UC_LETTER>",
    "<DIGIT>",
    "<DECIMAL_LITERAL>",
    "<BIN_LITERAL>",
    "<OCT_LITERAL>",
    "<HEX_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<QUOTED_ATOM>",
    "<QUOTED_STRING>",
    "<CLAUSE_REFERENCE>",
  };

}
